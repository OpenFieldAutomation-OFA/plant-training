2024/07/09 07:27:30 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 0
    GPU 0,1: NVIDIA A100-SXM4-80GB
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 12.3, V12.3.107
    GCC: x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.3.1+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.6 (Git Hash 86e6af5974177e513fd3fee58425e1063e7f1361)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.3.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.18.1+cu121
    OpenCV: 4.10.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 0
    deterministic: True
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 2
------------------------------------------------------------

2024/07/09 07:27:31 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=1024)
data_dir = '/mnt/data'
data_preprocessor = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    num_classes=7806,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
default_hooks = dict(
    checkpoint=dict(interval=1, max_keep_ckpts=5, type='CheckpointHook'),
    logger=dict(interval=25, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='VisualizationHook'))
default_scope = 'mmpretrain'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'pytorch'
load_from = '/mnt/data/saved/20240623_161452_leafcaw.pth'
log_level = 'INFO'
model = dict(
    backbone=dict(
        arch='base',
        frozen_stages=12,
        img_size=518,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmpretrain/v1.0/dinov2/vit-base-p14_dinov2-pre_3rdparty_20230426-ba246503.pth',
            prefix='backbone',
            type='Pretrained'),
        layer_scale_init_value=1e-05,
        patch_size=14,
        type='VisionTransformer'),
    head=dict(
        in_channels=768,
        loss=dict(type='CrossEntropyLoss'),
        num_classes=7806,
        topk=(
            1,
            5,
        ),
        type='VisionTransformerClsHead'),
    neck=None,
    type='ImageClassifier')
optim_wrapper = dict(
    loss_scale='dynamic',
    optimizer=dict(lr=0.0001, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        custom_keys=dict(
            cls_token=dict(decay_mult=0.0), mask_token=dict(decay_mult=0.0))),
    type='AmpOptimWrapper')
param_scheduler = [
    dict(T_max=20, by_epoch=True, type='CosineAnnealingLR'),
]
randomness = dict(deterministic=True, seed=0)
resume = False
test_cfg = dict()
test_dataloader = dict(
    batch_size=1024,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='annotation/caw_test.txt',
        data_prefix='/mnt/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=20,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
test_evaluator = dict(class_id=2354, topk=5, type='BinaryMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        backend='pillow',
        edge='short',
        interpolation='bicubic',
        scale=518,
        type='ResizeEdge'),
    dict(crop_size=518, type='CenterCrop'),
    dict(type='PackInputs'),
]
train_cfg = dict(by_epoch=True, max_epochs=12, val_interval=1)
train_dataloader = dict(
    batch_size=1024,
    dataset=dict(
        ann_file='annotation/train.txt',
        data_prefix='/mnt/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=20,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        backend='pillow',
        interpolation='bicubic',
        scale=518,
        type='RandomResizedCrop'),
    dict(direction='horizontal', prob=0.5, type='RandomFlip'),
    dict(type='PackInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=1024,
    dataset=dict(
        ann_file='annotation/val.txt',
        data_prefix='/mnt/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=20,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
val_evaluator = dict(
    topk=(
        1,
        5,
    ), type='Accuracy')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/test_binary'

2024/07/09 07:27:32 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/07/09 07:27:32 - mmengine - WARNING - The prefix is not set in metric class BinaryMetric.
2024/07/09 07:27:33 - mmengine - INFO - Load checkpoint from /mnt/data/saved/20240623_161452_leafcaw.pth
2024/07/09 07:28:19 - mmengine - INFO - Epoch(test) [2/2]    accuracy: 0.7859  precision: 0.2731  recall: 0.9739  f1: 0.4266  tp: 298  tn: 2642  fp: 793  fn: 8  fns: [torch.return_types.topk(
values=tensor([0.3706]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.3365]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2435]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.3663]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.1385]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.1094]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.2969]),
indices=tensor([2658])), torch.return_types.topk(
values=tensor([0.1242]),
indices=tensor([5273]))]  fps: [torch.return_types.topk(
values=tensor([0.7771]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8338]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9608]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.2821]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.8165]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6396]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.4530]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3105]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.2154]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.9909]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.3834]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.6945]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9342]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.2492]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6167]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.7187]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9774]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.6999]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8963]),
indices=tensor([6906])), torch.return_types.topk(
values=tensor([0.6587]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.2390]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8771]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8343]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.9490]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.4802]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4442]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9104]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.8523]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5140]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9988]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.2021]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.3198]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.1628]),
indices=tensor([7154])), torch.return_types.topk(
values=tensor([0.7955]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9400]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.4287]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8965]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6663]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.5605]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.1742]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9284]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.8057]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.8977]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9989]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8976]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.4044]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6474]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9751]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9796]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.6713]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.4107]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.3250]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3188]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.5134]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9822]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.2942]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.6093]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.8297]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.8247]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2486]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.4912]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.6954]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6306]),
indices=tensor([2614])), torch.return_types.topk(
values=tensor([0.6265]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4610]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.2084]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.4614]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9144]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.4523]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5880]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9123]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8461]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9893]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.1831]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.8012]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8208]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9927]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7595]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5974]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.4613]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9579]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3993]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.4488]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.5805]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.4369]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.8784]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2954]),
indices=tensor([2605])), torch.return_types.topk(
values=tensor([0.8567]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9625]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.6152]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2706]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9185]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.9909]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.9520]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.8408]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7818]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.5171]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4922]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3892]),
indices=tensor([3409])), torch.return_types.topk(
values=tensor([0.5588]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.7163]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.7948]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8139]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6013]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9086]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4120]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.1743]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9956]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9880]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.6049]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8088]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.2214]),
indices=tensor([263])), torch.return_types.topk(
values=tensor([0.6280]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.9025]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.5703]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3286]),
indices=tensor([3409])), torch.return_types.topk(
values=tensor([0.7045]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2811]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7556]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7280]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8813]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4231]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3522]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9321]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6425]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.2747]),
indices=tensor([2982])), torch.return_types.topk(
values=tensor([0.4580]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.9801]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.8904]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.1452]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.5154]),
indices=tensor([2658])), torch.return_types.topk(
values=tensor([0.5380]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9803]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6270]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9475]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.9840]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.4828]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8718]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.3422]),
indices=tensor([1417])), torch.return_types.topk(
values=tensor([0.9248]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.2186]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7569]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7235]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9906]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6177]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4415]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.9978]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.4425]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9051]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.9083]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9791]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9332]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7681]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8220]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4314]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7880]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5081]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4689]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9558]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5088]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9623]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.2040]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.5016]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9569]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.7267]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.9986]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9380]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.6542]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9726]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.4506]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.6841]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7870]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.5228]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.4038]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.7668]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.4174]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9382]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.9068]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7308]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4691]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.5235]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.3921]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9499]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4645]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.7786]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8406]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.7973]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9521]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7374]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9979]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6361]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8093]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9495]),
indices=tensor([2658])), torch.return_types.topk(
values=tensor([0.2640]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.8460]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8901]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.1841]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2058]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.5358]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6073]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2035]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6367]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.2108]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.5297]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6139]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3497]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.6943]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9885]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9325]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.5782]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.1700]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.1708]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.8791]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.4031]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5850]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.8378]),
indices=tensor([2444])), torch.return_types.topk(
values=tensor([0.8828]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6599]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3252]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9957]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.2684]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.3055]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.9287]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.4521]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.9749]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9979]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6877]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.4921]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8337]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.7091]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.9906]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.5922]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9419]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7363]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8846]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9562]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.8347]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2535]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.5726]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6145]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.2476]),
indices=tensor([2444])), torch.return_types.topk(
values=tensor([0.9089]),
indices=tensor([2658])), torch.return_types.topk(
values=tensor([0.7417]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5020]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.1847]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.2408]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8298]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.3717]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.4383]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5631]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3319]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4997]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2593]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9590]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.1945]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.2726]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.9725]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.6888]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.1742]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6008]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7241]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.8431]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.1859]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.8949]),
indices=tensor([2331])), torch.return_types.topk(
values=tensor([0.8357]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.5378]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9228]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.2772]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.2921]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.4267]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.8190]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4313]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.7493]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7378]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9297]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9948]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9211]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9779]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.6974]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2188]),
indices=tensor([2444])), torch.return_types.topk(
values=tensor([0.9843]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.1545]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.4827]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9860]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9195]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.5198]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4348]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4731]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.2051]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4145]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.5737]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.5963]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.2378]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.3434]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9082]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.5141]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.2743]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9313]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.2215]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.2190]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.7309]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9781]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9889]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9678]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.5310]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.2249]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9866]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.4153]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.7643]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9939]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9474]),
indices=tensor([2331])), torch.return_types.topk(
values=tensor([0.5653]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.8111]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.5852]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9537]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.9207]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9255]),
indices=tensor([2331])), torch.return_types.topk(
values=tensor([0.2544]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4721]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9031]),
indices=tensor([6906])), torch.return_types.topk(
values=tensor([0.9928]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9638]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.5241]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9119]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.7125]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8443]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9398]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.3974]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5452]),
indices=tensor([2331])), torch.return_types.topk(
values=tensor([0.4882]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.0875]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.8446]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5179]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2979]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9896]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9093]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8208]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9720]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.4351]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6626]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7061]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9419]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.7942]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7525]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.4966]),
indices=tensor([1597])), torch.return_types.topk(
values=tensor([0.9164]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.4691]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.4710]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.7113]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9852]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7007]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9808]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.7502]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.6728]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9446]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.6181]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8914]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.9176]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.8311]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2960]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7993]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.6007]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8664]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.6893]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.2190]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.1879]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7325]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7217]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.8126]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2604]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.3010]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8933]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7060]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9344]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.7571]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9083]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7567]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.2329]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.9789]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.1965]),
indices=tensor([1420])), torch.return_types.topk(
values=tensor([0.7796]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9937]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.5840]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9709]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.3387]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.5176]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.2822]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9904]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.5091]),
indices=tensor([3537])), torch.return_types.topk(
values=tensor([0.4076]),
indices=tensor([2982])), torch.return_types.topk(
values=tensor([0.2244]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.1672]),
indices=tensor([2444])), torch.return_types.topk(
values=tensor([0.9904]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.2202]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.8484]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.2456]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.3509]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7594]),
indices=tensor([3409])), torch.return_types.topk(
values=tensor([0.9900]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.7243]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9810]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.3746]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4382]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9932]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.1943]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.4112]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9102]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9748]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.5773]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9614]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.8458]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7404]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.7061]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9875]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.6157]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6205]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.9746]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9778]),
indices=tensor([95])), torch.return_types.topk(
values=tensor([0.9064]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5976]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.5958]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.7252]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2167]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.5081]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9806]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6989]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.3832]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9814]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.9940]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9946]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.5580]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9895]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.1981]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.9798]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7355]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9097]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.8902]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9552]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.7401]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.1559]),
indices=tensor([3409])), torch.return_types.topk(
values=tensor([0.3303]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2361]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9647]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.2122]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8939]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9396]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9924]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.9514]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.2517]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.5123]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9939]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.6383]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9427]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8822]),
indices=tensor([59])), torch.return_types.topk(
values=tensor([0.8844]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.2430]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9321]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4158]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.8348]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.6573]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9990]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.7839]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4386]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6418]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9018]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.9314]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9243]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9926]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.5486]),
indices=tensor([2658])), torch.return_types.topk(
values=tensor([0.9952]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.3879]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4033]),
indices=tensor([2658])), torch.return_types.topk(
values=tensor([0.4994]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9686]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6246]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4992]),
indices=tensor([59])), torch.return_types.topk(
values=tensor([0.7273]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4506]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9885]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.1917]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8759]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.9408]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.2096]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9968]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8851]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7894]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.7171]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3343]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9174]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.6724]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.6954]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8865]),
indices=tensor([6280])), torch.return_types.topk(
values=tensor([0.4666]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.8590]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.4919]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.6353]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.4226]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9124]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.3331]),
indices=tensor([2614])), torch.return_types.topk(
values=tensor([0.9940]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.2584]),
indices=tensor([2782])), torch.return_types.topk(
values=tensor([0.4320]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.3054]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.4289]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.8706]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4555]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9554]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.8471]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.2759]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.4749]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.8298]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.6326]),
indices=tensor([6906])), torch.return_types.topk(
values=tensor([0.8521]),
indices=tensor([59])), torch.return_types.topk(
values=tensor([0.5111]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.7419]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7928]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4523]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2650]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.8082]),
indices=tensor([2177])), torch.return_types.topk(
values=tensor([0.9351]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9004]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.2746]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7546]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.4594]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.5279]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8023]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2088]),
indices=tensor([574])), torch.return_types.topk(
values=tensor([0.2414]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7490]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9377]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9982]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.9747]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.3535]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.4043]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.5753]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9272]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.6656]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8519]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7670]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7539]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9516]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.7677]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9066]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.3727]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9017]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2049]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.8252]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9684]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9924]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9882]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7810]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.7709]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7117]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5780]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9890]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.5788]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6458]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6791]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8154]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.2998]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9969]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.3103]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9049]),
indices=tensor([2444])), torch.return_types.topk(
values=tensor([0.9524]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.6240]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.8133]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9734]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.5745]),
indices=tensor([1417])), torch.return_types.topk(
values=tensor([0.9706]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6839]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9538]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.9144]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9880]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.2194]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.8805]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9256]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.9318]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9672]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.8342]),
indices=tensor([6280])), torch.return_types.topk(
values=tensor([0.9816]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.3075]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9424]),
indices=tensor([2331])), torch.return_types.topk(
values=tensor([0.9400]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.4817]),
indices=tensor([2444])), torch.return_types.topk(
values=tensor([0.6425]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.1725]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.7994]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6306]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9055]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.7526]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4614]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7656]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8784]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3915]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7442]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8665]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.5509]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.4094]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9988]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7004]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.6942]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.4712]),
indices=tensor([2333])), torch.return_types.topk(
values=tensor([0.6985]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3132]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.7813]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.2939]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3272]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.6020]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.9399]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7330]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9929]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.5146]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9926]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.8096]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9660]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.8471]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9794]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9858]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.9965]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.1425]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9265]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9077]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9837]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9756]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.7903]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9906]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9566]),
indices=tensor([6280])), torch.return_types.topk(
values=tensor([0.5297]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.1186]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.6151]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9968]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6378]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.5347]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4564]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8781]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.6814]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.5286]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.3377]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9310]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.7109]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.8188]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9624]),
indices=tensor([6906])), torch.return_types.topk(
values=tensor([0.3914]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.7767]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9979]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.8053]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6758]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.8630]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.6292]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9895]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.8664]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9638]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.4319]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8883]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9845]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7544]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9787]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.1650]),
indices=tensor([7154])), torch.return_types.topk(
values=tensor([0.8253]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.3003]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.5618]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3364]),
indices=tensor([6280])), torch.return_types.topk(
values=tensor([0.9948]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9836]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.5432]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7127]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9956]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.3660]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.8616]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9008]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9203]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.6729]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.6533]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.8653]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.7843]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.4587]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2754]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.9157]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.9712]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.2348]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.4138]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.1900]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.8789]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6612]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.5247]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.5214]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9943]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9916]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.8354]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9096]),
indices=tensor([1597])), torch.return_types.topk(
values=tensor([0.9572]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.8402]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.1721]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.7665]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.6764]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8018]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8184]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.0257]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3225]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.9765]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9798]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.6933]),
indices=tensor([2614])), torch.return_types.topk(
values=tensor([0.5743]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5763]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9797]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.2570]),
indices=tensor([2782])), torch.return_types.topk(
values=tensor([0.7470]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9885]),
indices=tensor([2527])), torch.return_types.topk(
values=tensor([0.9706]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.6757]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.1642]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.4455]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9485]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.9359]),
indices=tensor([6280])), torch.return_types.topk(
values=tensor([0.6942]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.9747]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.1764]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.6419]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2006]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4689]),
indices=tensor([2658])), torch.return_types.topk(
values=tensor([0.9834]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.7994]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.5484]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7592]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.6630]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.9934]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9356]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.1934]),
indices=tensor([2444])), torch.return_types.topk(
values=tensor([0.6355]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9666]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.6630]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.6919]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6908]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3826]),
indices=tensor([2444])), torch.return_types.topk(
values=tensor([0.9954]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.8581]),
indices=tensor([2782])), torch.return_types.topk(
values=tensor([0.6465]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9841]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9386]),
indices=tensor([2614])), torch.return_types.topk(
values=tensor([0.4592]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6145]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5864]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3000]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.9842]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.7505]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.9467]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.9103]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9350]),
indices=tensor([2712])), torch.return_types.topk(
values=tensor([0.8503]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.9725]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.7381]),
indices=tensor([29])), torch.return_types.topk(
values=tensor([0.6199]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.2253]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.2117]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.6670]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.4083]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.7339]),
indices=tensor([6906])), torch.return_types.topk(
values=tensor([0.6068]),
indices=tensor([3686])), torch.return_types.topk(
values=tensor([0.5063]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.3263]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5659]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.6153]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9440]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.7698]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9958]),
indices=tensor([49])), torch.return_types.topk(
values=tensor([0.4279]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.2786]),
indices=tensor([7154])), torch.return_types.topk(
values=tensor([0.8536]),
indices=tensor([2345])), torch.return_types.topk(
values=tensor([0.8924]),
indices=tensor([28])), torch.return_types.topk(
values=tensor([0.4562]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.2812]),
indices=tensor([2354])), torch.return_types.topk(
values=tensor([0.4873]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9310]),
indices=tensor([80])), torch.return_types.topk(
values=tensor([0.9908]),
indices=tensor([252])), torch.return_types.topk(
values=tensor([0.5220]),
indices=tensor([2333])), torch.return_types.topk(
values=tensor([0.9071]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.6617]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5756]),
indices=tensor([95])), torch.return_types.topk(
values=tensor([0.3664]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3338]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.2022]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9988]),
indices=tensor([2473])), torch.return_types.topk(
values=tensor([0.1462]),
indices=tensor([307])), torch.return_types.topk(
values=tensor([0.9295]),
indices=tensor([5558])), torch.return_types.topk(
values=tensor([0.5353]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8113]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.5724]),
indices=tensor([2782])), torch.return_types.topk(
values=tensor([0.6688]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.8178]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.9530]),
indices=tensor([2190])), torch.return_types.topk(
values=tensor([0.7121]),
indices=tensor([5707])), torch.return_types.topk(
values=tensor([0.3185]),
indices=tensor([3538])), torch.return_types.topk(
values=tensor([0.8891]),
indices=tensor([29]))]  data_time: 3.7535  time: 19.4888

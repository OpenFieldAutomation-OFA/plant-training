2024/06/24 07:25:50 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 0
    GPU 0: NVIDIA H100 80GB HBM3
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 12.3, V12.3.107
    GCC: x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.3.1+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.6 (Git Hash 86e6af5974177e513fd3fee58425e1063e7f1361)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.3.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.18.1+cu121
    OpenCV: 4.10.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 0
    deterministic: True
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/06/24 07:25:50 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=1024)
data_dir = '/mnt/data'
data_preprocessor = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    num_classes=7806,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
default_hooks = dict(
    checkpoint=dict(interval=1, max_keep_ckpts=5, type='CheckpointHook'),
    logger=dict(interval=25, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='VisualizationHook'))
default_scope = 'mmpretrain'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = '/mnt/data/saved/20240621_150251_baseline.pth'
log_level = 'INFO'
model = dict(
    backbone=dict(
        arch='base',
        frozen_stages=12,
        img_size=518,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmpretrain/v1.0/dinov2/vit-base-p14_dinov2-pre_3rdparty_20230426-ba246503.pth',
            prefix='backbone',
            type='Pretrained'),
        layer_scale_init_value=1e-05,
        patch_size=14,
        type='VisionTransformer'),
    head=dict(
        in_channels=768,
        loss=dict(type='CrossEntropyLoss'),
        num_classes=7806,
        topk=(
            1,
            5,
        ),
        type='VisionTransformerClsHead'),
    neck=None,
    type='ImageClassifier')
optim_wrapper = dict(
    loss_scale='dynamic',
    optimizer=dict(lr=0.0001, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        custom_keys=dict(
            cls_token=dict(decay_mult=0.0), mask_token=dict(decay_mult=0.0))),
    type='AmpOptimWrapper')
param_scheduler = [
    dict(T_max=20, by_epoch=True, type='CosineAnnealingLR'),
]
randomness = dict(deterministic=True, seed=0)
resume = False
test_cfg = dict()
test_dataloader = dict(
    batch_size=2,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='annotation/caw_test.txt',
        data_prefix='/mnt/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=4,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
test_evaluator = dict(type='MaizeMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        backend='pillow',
        edge='short',
        interpolation='bicubic',
        scale=518,
        type='ResizeEdge'),
    dict(crop_size=518, type='CenterCrop'),
    dict(type='PackInputs'),
]
train_cfg = dict(by_epoch=True, max_epochs=12, val_interval=1)
train_dataloader = dict(
    batch_size=1024,
    dataset=dict(
        ann_file='annotation/train.txt',
        data_prefix='/mnt/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        backend='pillow',
        interpolation='bicubic',
        scale=518,
        type='RandomResizedCrop'),
    dict(direction='horizontal', prob=0.5, type='RandomFlip'),
    dict(type='PackInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=1024,
    dataset=dict(
        ann_file='annotation/val.txt',
        data_prefix='/mnt/data',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
val_evaluator = dict(type='MaizeMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/test_binary'

2024/06/24 07:25:51 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/06/24 07:25:51 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/06/24 07:25:51 - mmengine - WARNING - The prefix is not set in metric class MaizeMetric.
2024/06/24 07:25:59 - mmengine - INFO - Load checkpoint from /mnt/data/saved/20240621_150251_baseline.pth
2024/06/24 07:26:01 - mmengine - INFO - Epoch(test) [  25/1871]    eta: 0:01:56  time: 0.0526  data_time: 0.0388  memory: 479  
2024/06/24 07:26:02 - mmengine - INFO - Epoch(test) [  50/1871]    eta: 0:01:18  time: 0.0233  data_time: 0.0079  memory: 479  
2024/06/24 07:26:02 - mmengine - INFO - Epoch(test) [  75/1871]    eta: 0:01:05  time: 0.0249  data_time: 0.0097  memory: 480  
2024/06/24 07:26:03 - mmengine - INFO - Epoch(test) [ 100/1871]    eta: 0:01:00  time: 0.0171  data_time: 0.0002  memory: 480  
2024/06/24 07:26:04 - mmengine - INFO - Epoch(test) [ 125/1871]    eta: 0:01:00  time: 0.0340  data_time: 0.0186  memory: 480  
2024/06/24 07:26:04 - mmengine - INFO - Epoch(test) [ 150/1871]    eta: 0:00:57  time: 0.0333  data_time: 0.0183  memory: 480  
2024/06/24 07:26:05 - mmengine - INFO - Epoch(test) [ 175/1871]    eta: 0:00:57  time: 0.0443  data_time: 0.0284  memory: 480  
2024/06/24 07:26:06 - mmengine - INFO - Epoch(test) [ 200/1871]    eta: 0:00:55  time: 0.0389  data_time: 0.0244  memory: 480  
2024/06/24 07:26:07 - mmengine - INFO - Epoch(test) [ 225/1871]    eta: 0:00:53  time: 0.0222  data_time: 0.0061  memory: 480  
2024/06/24 07:26:07 - mmengine - INFO - Epoch(test) [ 250/1871]    eta: 0:00:50  time: 0.0197  data_time: 0.0040  memory: 480  
2024/06/24 07:26:08 - mmengine - INFO - Epoch(test) [ 275/1871]    eta: 0:00:47  time: 0.0170  data_time: 0.0002  memory: 480  
2024/06/24 07:26:08 - mmengine - INFO - Epoch(test) [ 300/1871]    eta: 0:00:46  time: 0.0372  data_time: 0.0219  memory: 480  
2024/06/24 07:26:09 - mmengine - INFO - Epoch(test) [ 325/1871]    eta: 0:00:44  time: 0.0219  data_time: 0.0058  memory: 480  
2024/06/24 07:26:09 - mmengine - INFO - Epoch(test) [ 350/1871]    eta: 0:00:43  time: 0.0246  data_time: 0.0086  memory: 480  
2024/06/24 07:26:10 - mmengine - INFO - Epoch(test) [ 375/1871]    eta: 0:00:42  time: 0.0171  data_time: 0.0002  memory: 480  
2024/06/24 07:26:11 - mmengine - INFO - Epoch(test) [ 400/1871]    eta: 0:00:41  time: 0.0180  data_time: 0.0020  memory: 480  
2024/06/24 07:26:11 - mmengine - INFO - Epoch(test) [ 425/1871]    eta: 0:00:40  time: 0.0171  data_time: 0.0002  memory: 480  
2024/06/24 07:26:12 - mmengine - INFO - Epoch(test) [ 450/1871]    eta: 0:00:38  time: 0.0171  data_time: 0.0001  memory: 480  
2024/06/24 07:26:12 - mmengine - INFO - Epoch(test) [ 475/1871]    eta: 0:00:38  time: 0.0171  data_time: 0.0001  memory: 480  
2024/06/24 07:26:13 - mmengine - INFO - Epoch(test) [ 500/1871]    eta: 0:00:36  time: 0.0171  data_time: 0.0001  memory: 480  
2024/06/24 07:26:13 - mmengine - INFO - Epoch(test) [ 525/1871]    eta: 0:00:35  time: 0.0171  data_time: 0.0001  memory: 480  
2024/06/24 07:26:14 - mmengine - INFO - Epoch(test) [ 550/1871]    eta: 0:00:34  time: 0.0337  data_time: 0.0177  memory: 480  
2024/06/24 07:26:14 - mmengine - INFO - Epoch(test) [ 575/1871]    eta: 0:00:33  time: 0.0196  data_time: 0.0046  memory: 480  
2024/06/24 07:26:15 - mmengine - INFO - Epoch(test) [ 600/1871]    eta: 0:00:33  time: 0.0171  data_time: 0.0001  memory: 480  
2024/06/24 07:26:16 - mmengine - INFO - Epoch(test) [ 625/1871]    eta: 0:00:32  time: 0.0216  data_time: 0.0069  memory: 480  
2024/06/24 07:26:16 - mmengine - INFO - Epoch(test) [ 650/1871]    eta: 0:00:31  time: 0.0228  data_time: 0.0088  memory: 480  
2024/06/24 07:26:17 - mmengine - INFO - Epoch(test) [ 675/1871]    eta: 0:00:30  time: 0.0171  data_time: 0.0001  memory: 480  
2024/06/24 07:26:17 - mmengine - INFO - Epoch(test) [ 700/1871]    eta: 0:00:29  time: 0.0170  data_time: 0.0007  memory: 480  
2024/06/24 07:26:18 - mmengine - INFO - Epoch(test) [ 725/1871]    eta: 0:00:28  time: 0.0261  data_time: 0.0121  memory: 480  
2024/06/24 07:26:18 - mmengine - INFO - Epoch(test) [ 750/1871]    eta: 0:00:28  time: 0.0233  data_time: 0.0083  memory: 480  
2024/06/24 07:26:19 - mmengine - INFO - Epoch(test) [ 775/1871]    eta: 0:00:27  time: 0.0171  data_time: 0.0002  memory: 481  
2024/06/24 07:26:19 - mmengine - INFO - Epoch(test) [ 800/1871]    eta: 0:00:26  time: 0.0172  data_time: 0.0001  memory: 481  
2024/06/24 07:26:20 - mmengine - INFO - Epoch(test) [ 825/1871]    eta: 0:00:25  time: 0.0171  data_time: 0.0002  memory: 481  
2024/06/24 07:26:20 - mmengine - INFO - Epoch(test) [ 850/1871]    eta: 0:00:24  time: 0.0191  data_time: 0.0030  memory: 481  
2024/06/24 07:26:21 - mmengine - INFO - Epoch(test) [ 875/1871]    eta: 0:00:24  time: 0.0170  data_time: 0.0002  memory: 481  
2024/06/24 07:26:21 - mmengine - INFO - Epoch(test) [ 900/1871]    eta: 0:00:23  time: 0.0214  data_time: 0.0054  memory: 481  
2024/06/24 07:26:22 - mmengine - INFO - Epoch(test) [ 925/1871]    eta: 0:00:22  time: 0.0171  data_time: 0.0001  memory: 481  
2024/06/24 07:26:22 - mmengine - INFO - Epoch(test) [ 950/1871]    eta: 0:00:21  time: 0.0173  data_time: 0.0019  memory: 481  
2024/06/24 07:26:23 - mmengine - INFO - Epoch(test) [ 975/1871]    eta: 0:00:21  time: 0.0171  data_time: 0.0002  memory: 481  
2024/06/24 07:26:23 - mmengine - INFO - Epoch(test) [1000/1871]    eta: 0:00:20  time: 0.0171  data_time: 0.0002  memory: 481  
2024/06/24 07:26:23 - mmengine - INFO - Epoch(test) [1025/1871]    eta: 0:00:19  time: 0.0171  data_time: 0.0001  memory: 481  
2024/06/24 07:26:24 - mmengine - INFO - Epoch(test) [1050/1871]    eta: 0:00:19  time: 0.0171  data_time: 0.0001  memory: 481  
2024/06/24 07:26:24 - mmengine - INFO - Epoch(test) [1075/1871]    eta: 0:00:18  time: 0.0171  data_time: 0.0001  memory: 481  
2024/06/24 07:26:25 - mmengine - INFO - Epoch(test) [1100/1871]    eta: 0:00:17  time: 0.0259  data_time: 0.0100  memory: 481  
2024/06/24 07:26:25 - mmengine - INFO - Epoch(test) [1125/1871]    eta: 0:00:17  time: 0.0171  data_time: 0.0002  memory: 481  
2024/06/24 07:26:26 - mmengine - INFO - Epoch(test) [1150/1871]    eta: 0:00:16  time: 0.0171  data_time: 0.0001  memory: 481  
2024/06/24 07:26:27 - mmengine - INFO - Epoch(test) [1175/1871]    eta: 0:00:16  time: 0.0252  data_time: 0.0101  memory: 481  
2024/06/24 07:26:27 - mmengine - INFO - Epoch(test) [1200/1871]    eta: 0:00:15  time: 0.0279  data_time: 0.0119  memory: 481  
2024/06/24 07:26:28 - mmengine - INFO - Epoch(test) [1225/1871]    eta: 0:00:14  time: 0.0171  data_time: 0.0001  memory: 481  
2024/06/24 07:26:28 - mmengine - INFO - Epoch(test) [1250/1871]    eta: 0:00:14  time: 0.0199  data_time: 0.0039  memory: 481  
2024/06/24 07:26:29 - mmengine - INFO - Epoch(test) [1275/1871]    eta: 0:00:13  time: 0.0171  data_time: 0.0002  memory: 481  
2024/06/24 07:26:29 - mmengine - INFO - Epoch(test) [1300/1871]    eta: 0:00:12  time: 0.0171  data_time: 0.0008  memory: 481  
2024/06/24 07:26:30 - mmengine - INFO - Epoch(test) [1325/1871]    eta: 0:00:12  time: 0.0390  data_time: 0.0241  memory: 481  
2024/06/24 07:26:30 - mmengine - INFO - Epoch(test) [1350/1871]    eta: 0:00:11  time: 0.0171  data_time: 0.0002  memory: 481  
2024/06/24 07:26:31 - mmengine - INFO - Epoch(test) [1375/1871]    eta: 0:00:11  time: 0.0171  data_time: 0.0001  memory: 481  
2024/06/24 07:26:31 - mmengine - INFO - Epoch(test) [1400/1871]    eta: 0:00:10  time: 0.0171  data_time: 0.0003  memory: 481  
2024/06/24 07:26:32 - mmengine - INFO - Epoch(test) [1425/1871]    eta: 0:00:10  time: 0.0222  data_time: 0.0063  memory: 481  
2024/06/24 07:26:32 - mmengine - INFO - Epoch(test) [1450/1871]    eta: 0:00:09  time: 0.0171  data_time: 0.0002  memory: 482  
2024/06/24 07:26:33 - mmengine - INFO - Epoch(test) [1475/1871]    eta: 0:00:08  time: 0.0171  data_time: 0.0001  memory: 482  
2024/06/24 07:26:33 - mmengine - INFO - Epoch(test) [1500/1871]    eta: 0:00:08  time: 0.0200  data_time: 0.0040  memory: 482  
2024/06/24 07:26:33 - mmengine - INFO - Epoch(test) [1525/1871]    eta: 0:00:07  time: 0.0172  data_time: 0.0002  memory: 482  
2024/06/24 07:26:34 - mmengine - INFO - Epoch(test) [1550/1871]    eta: 0:00:07  time: 0.0171  data_time: 0.0002  memory: 482  
2024/06/24 07:26:34 - mmengine - INFO - Epoch(test) [1575/1871]    eta: 0:00:06  time: 0.0171  data_time: 0.0001  memory: 482  
2024/06/24 07:26:35 - mmengine - INFO - Epoch(test) [1600/1871]    eta: 0:00:05  time: 0.0171  data_time: 0.0002  memory: 482  
2024/06/24 07:26:35 - mmengine - INFO - Epoch(test) [1625/1871]    eta: 0:00:05  time: 0.0171  data_time: 0.0002  memory: 482  
2024/06/24 07:26:36 - mmengine - INFO - Epoch(test) [1650/1871]    eta: 0:00:04  time: 0.0215  data_time: 0.0058  memory: 482  
2024/06/24 07:26:36 - mmengine - INFO - Epoch(test) [1675/1871]    eta: 0:00:04  time: 0.0171  data_time: 0.0001  memory: 482  
2024/06/24 07:26:37 - mmengine - INFO - Epoch(test) [1700/1871]    eta: 0:00:03  time: 0.0171  data_time: 0.0002  memory: 482  
2024/06/24 07:26:37 - mmengine - INFO - Epoch(test) [1725/1871]    eta: 0:00:03  time: 0.0171  data_time: 0.0002  memory: 482  
2024/06/24 07:26:38 - mmengine - INFO - Epoch(test) [1750/1871]    eta: 0:00:02  time: 0.0171  data_time: 0.0002  memory: 482  
2024/06/24 07:26:38 - mmengine - INFO - Epoch(test) [1775/1871]    eta: 0:00:02  time: 0.0171  data_time: 0.0001  memory: 482  
2024/06/24 07:26:39 - mmengine - INFO - Epoch(test) [1800/1871]    eta: 0:00:01  time: 0.0170  data_time: 0.0001  memory: 482  
2024/06/24 07:26:39 - mmengine - INFO - Epoch(test) [1825/1871]    eta: 0:00:00  time: 0.0172  data_time: 0.0007  memory: 482  
2024/06/24 07:26:39 - mmengine - INFO - Epoch(test) [1850/1871]    eta: 0:00:00  time: 0.0171  data_time: 0.0001  memory: 482  
2024/06/24 07:26:40 - mmengine - INFO - Epoch(test) [1871/1871]    maize accuracy: 98.5565  data_time: 0.0050  time: 0.0216

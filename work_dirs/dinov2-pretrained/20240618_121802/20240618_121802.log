2024/06/18 12:18:03 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 0
    GPU 0: NVIDIA RTX A6000
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 12.3, V12.3.107
    GCC: x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.3.1+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.6 (Git Hash 86e6af5974177e513fd3fee58425e1063e7f1361)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.3.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.18.1+cu121
    OpenCV: 4.10.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 0
    deterministic: True
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 1
------------------------------------------------------------

2024/06/18 12:18:03 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=1024)
data_dir = '/mnt/data/caw/classification'
data_preprocessor = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    num_classes=7806,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
default_hooks = dict(
    checkpoint=dict(interval=1, max_keep_ckpts=5, type='CheckpointHook'),
    logger=dict(interval=100, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='VisualizationHook'))
default_scope = 'mmpretrain'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'pytorch'
load_from = None
log_level = 'INFO'
model = dict(
    init_cfg=dict(
        checkpoint='/mnt/data/plantclef/pretrained/dinov2.pth',
        type='Pretrained'),
    model_name='vit_base_patch14_reg4_dinov2.lvd142m',
    num_classes=7806,
    type='TimmClassifier')
optim_wrapper = dict(
    loss_scale='dynamic',
    optimizer=dict(lr=0.001, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        custom_keys=dict(
            cls_token=dict(decay_mult=0.0), mask_token=dict(decay_mult=0.0))),
    type='AmpOptimWrapper')
param_scheduler = dict(by_epoch=True, type='CosineAnnealingLR')
randomness = dict(deterministic=True, seed=0)
resume = False
test_cfg = dict()
test_dataloader = dict(
    batch_size=128,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='annotation/caw_test.txt',
        data_prefix='/mnt/data/caw/classification',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=10,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
test_evaluator = dict(
    topk=(
        1,
        5,
    ), type='Accuracy')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        backend='pillow',
        edge='short',
        interpolation='bicubic',
        scale=518,
        type='ResizeEdge'),
    dict(crop_size=518, type='CenterCrop'),
    dict(type='PackInputs'),
]
train_cfg = dict(by_epoch=True, max_epochs=15, val_interval=1)
train_dataloader = dict(
    batch_size=64,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='annotation/caw_train.txt',
        data_prefix='/mnt/data/caw/classification',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=10,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        backend='pillow',
        interpolation='bicubic',
        scale=518,
        type='RandomResizedCrop'),
    dict(direction='horizontal', prob=0.5, type='RandomFlip'),
    dict(brightness=0.4, contrast=0.4, saturation=0.4, type='ColorJitter'),
    dict(type='PackInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=128,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='annotation/caw_val.txt',
        data_prefix='/mnt/data/caw/classification',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=10,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
val_evaluator = dict(
    topk=(
        1,
        5,
    ), type='Accuracy')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/dinov2-pretrained'

2024/06/18 12:18:07 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/06/18 12:18:07 - mmengine - INFO - paramwise_options -- model.cls_token:lr=0.001
2024/06/18 12:18:07 - mmengine - INFO - paramwise_options -- model.cls_token:weight_decay=0.0
2024/06/18 12:18:07 - mmengine - INFO - paramwise_options -- model.cls_token:decay_mult=0.0
2024/06/18 12:18:08 - mmengine - INFO - load model from: /mnt/data/plantclef/pretrained/dinov2.pth
2024/06/18 12:18:08 - mmengine - INFO - Loads checkpoint by local backend from path: /mnt/data/plantclef/pretrained/dinov2.pth
Name of parameter - Initialization information

model.cls_token - torch.Size([1, 1, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.reg_token - torch.Size([1, 4, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.pos_embed - torch.Size([1, 1369, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.patch_embed.proj.weight - torch.Size([768, 3, 14, 14]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.patch_embed.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.0.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.1.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.2.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.3.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.4.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.5.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.6.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.7.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.8.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.9.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.10.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.norm1.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.norm1.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.attn.qkv.weight - torch.Size([2304, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.attn.qkv.bias - torch.Size([2304]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.attn.proj.weight - torch.Size([768, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.attn.proj.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.ls1.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.norm2.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.norm2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.mlp.fc1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.mlp.fc1.bias - torch.Size([3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.mlp.fc2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.mlp.fc2.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.blocks.11.ls2.gamma - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.norm.weight - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.norm.bias - torch.Size([768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.head.weight - torch.Size([7806, 768]): 
PretrainedInit: load from /mnt/data/plantclef/pretrained/dinov2.pth 

model.head.bias - torch.Size([7806]): 
The value is the same before and after calling `init_weights` of TimmClassifier  
2024/06/18 12:18:08 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/06/18 12:18:08 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/06/18 12:18:08 - mmengine - INFO - Checkpoints will be saved to /root/weed-detection/work_dirs/dinov2-pretrained.
2024/06/18 12:19:58 - mmengine - INFO - Epoch(train)  [1][ 100/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:47:35  time: 1.0927  data_time: 0.0011  memory: 33872  loss: 3.3755
2024/06/18 12:21:48 - mmengine - INFO - Epoch(train)  [1][ 200/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:45:29  time: 1.0999  data_time: 0.0011  memory: 33872  loss: 3.2602
2024/06/18 12:23:38 - mmengine - INFO - Epoch(train)  [1][ 300/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:43:42  time: 1.1009  data_time: 0.0021  memory: 33872  loss: 2.7988
2024/06/18 12:25:28 - mmengine - INFO - Epoch(train)  [1][ 400/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:41:54  time: 1.1002  data_time: 0.0010  memory: 33872  loss: 2.8580
2024/06/18 12:27:18 - mmengine - INFO - Epoch(train)  [1][ 500/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:40:09  time: 1.1013  data_time: 0.0011  memory: 33872  loss: 2.6886
2024/06/18 12:29:08 - mmengine - INFO - Epoch(train)  [1][ 600/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:38:22  time: 1.1012  data_time: 0.0011  memory: 33872  loss: 2.4871
2024/06/18 12:30:58 - mmengine - INFO - Epoch(train)  [1][ 700/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:36:35  time: 1.1012  data_time: 0.0010  memory: 33872  loss: 2.3642
2024/06/18 12:32:48 - mmengine - INFO - Epoch(train)  [1][ 800/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:34:47  time: 1.1014  data_time: 0.0011  memory: 33872  loss: 2.2262
2024/06/18 12:34:39 - mmengine - INFO - Epoch(train)  [1][ 900/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:32:59  time: 1.1021  data_time: 0.0011  memory: 33872  loss: 2.1905
2024/06/18 12:36:29 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 12:36:29 - mmengine - INFO - Epoch(train)  [1][1000/1052]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 4:31:10  time: 1.1014  data_time: 0.0011  memory: 33872  loss: 2.0348
2024/06/18 12:37:26 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 12:37:26 - mmengine - INFO - Saving checkpoint at 1 epochs
2024/06/18 12:38:59 - mmengine - INFO - Epoch(val) [1][30/30]    accuracy/top1: 43.3957  accuracy/top5: 76.1230  data_time: 0.0469  time: 2.9433
2024/06/18 12:40:50 - mmengine - INFO - Epoch(train)  [2][ 100/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:28:30  time: 1.1017  data_time: 0.0009  memory: 33872  loss: 1.8066
2024/06/18 12:42:40 - mmengine - INFO - Epoch(train)  [2][ 200/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:26:39  time: 1.1017  data_time: 0.0013  memory: 33872  loss: 1.8998
2024/06/18 12:44:30 - mmengine - INFO - Epoch(train)  [2][ 300/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:24:50  time: 1.1020  data_time: 0.0011  memory: 33872  loss: 1.7451
2024/06/18 12:46:20 - mmengine - INFO - Epoch(train)  [2][ 400/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:23:00  time: 1.1023  data_time: 0.0010  memory: 33872  loss: 1.6482
2024/06/18 12:48:11 - mmengine - INFO - Epoch(train)  [2][ 500/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:21:11  time: 1.1025  data_time: 0.0010  memory: 33872  loss: 1.6705
2024/06/18 12:50:01 - mmengine - INFO - Epoch(train)  [2][ 600/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:19:21  time: 1.1021  data_time: 0.0009  memory: 33872  loss: 1.6825
2024/06/18 12:51:51 - mmengine - INFO - Epoch(train)  [2][ 700/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:17:32  time: 1.1016  data_time: 0.0009  memory: 33872  loss: 1.5390
2024/06/18 12:53:41 - mmengine - INFO - Epoch(train)  [2][ 800/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:15:42  time: 1.1018  data_time: 0.0010  memory: 33872  loss: 1.6753
2024/06/18 12:55:31 - mmengine - INFO - Epoch(train)  [2][ 900/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:13:52  time: 1.1014  data_time: 0.0011  memory: 33872  loss: 1.6742
2024/06/18 12:56:24 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 12:57:22 - mmengine - INFO - Epoch(train)  [2][1000/1052]  base_lr: 9.8907e-04 lr: 9.8907e-04  eta: 4:12:02  time: 1.1026  data_time: 0.0010  memory: 33872  loss: 1.5782
2024/06/18 12:58:19 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 12:58:19 - mmengine - INFO - Saving checkpoint at 2 epochs
2024/06/18 12:59:52 - mmengine - INFO - Epoch(val) [2][30/30]    accuracy/top1: 57.6203  accuracy/top5: 85.0535  data_time: 0.0317  time: 2.8478
2024/06/18 13:01:42 - mmengine - INFO - Epoch(train)  [3][ 100/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 4:09:19  time: 1.1012  data_time: 0.0010  memory: 33872  loss: 1.5009
2024/06/18 13:03:33 - mmengine - INFO - Epoch(train)  [3][ 200/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 4:07:28  time: 1.1019  data_time: 0.0011  memory: 33872  loss: 1.4010
2024/06/18 13:05:23 - mmengine - INFO - Epoch(train)  [3][ 300/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 4:05:39  time: 1.1029  data_time: 0.0015  memory: 33872  loss: 1.3775
2024/06/18 13:07:13 - mmengine - INFO - Epoch(train)  [3][ 400/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 4:03:49  time: 1.1029  data_time: 0.0009  memory: 33872  loss: 1.3550
2024/06/18 13:09:04 - mmengine - INFO - Epoch(train)  [3][ 500/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 4:02:00  time: 1.1027  data_time: 0.0010  memory: 33872  loss: 1.3545
2024/06/18 13:10:54 - mmengine - INFO - Epoch(train)  [3][ 600/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 4:00:10  time: 1.1023  data_time: 0.0010  memory: 33872  loss: 1.3788
2024/06/18 13:12:44 - mmengine - INFO - Epoch(train)  [3][ 700/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 3:58:20  time: 1.1017  data_time: 0.0010  memory: 33872  loss: 1.4100
2024/06/18 13:14:34 - mmengine - INFO - Epoch(train)  [3][ 800/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 3:56:30  time: 1.1020  data_time: 0.0010  memory: 33872  loss: 1.4416
2024/06/18 13:16:20 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 13:16:25 - mmengine - INFO - Epoch(train)  [3][ 900/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 3:54:40  time: 1.1016  data_time: 0.0010  memory: 33872  loss: 1.3106
2024/06/18 13:18:15 - mmengine - INFO - Epoch(train)  [3][1000/1052]  base_lr: 9.5677e-04 lr: 9.5677e-04  eta: 3:52:50  time: 1.1028  data_time: 0.0010  memory: 33872  loss: 1.4110
2024/06/18 13:19:12 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 13:19:12 - mmengine - INFO - Saving checkpoint at 3 epochs
2024/06/18 13:20:45 - mmengine - INFO - Epoch(val) [3][30/30]    accuracy/top1: 62.6738  accuracy/top5: 88.2888  data_time: 0.0395  time: 2.8473
2024/06/18 13:22:35 - mmengine - INFO - Epoch(train)  [4][ 100/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:50:04  time: 1.1019  data_time: 0.0010  memory: 33872  loss: 1.2996
2024/06/18 13:24:26 - mmengine - INFO - Epoch(train)  [4][ 200/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:48:14  time: 1.1033  data_time: 0.0010  memory: 33872  loss: 1.2635
2024/06/18 13:26:16 - mmengine - INFO - Epoch(train)  [4][ 300/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:46:24  time: 1.1029  data_time: 0.0010  memory: 33872  loss: 1.2562
2024/06/18 13:28:06 - mmengine - INFO - Epoch(train)  [4][ 400/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:44:34  time: 1.1026  data_time: 0.0010  memory: 33872  loss: 1.3200
2024/06/18 13:29:57 - mmengine - INFO - Epoch(train)  [4][ 500/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:42:44  time: 1.1065  data_time: 0.0011  memory: 33872  loss: 1.1692
2024/06/18 13:31:47 - mmengine - INFO - Epoch(train)  [4][ 600/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:40:54  time: 1.1021  data_time: 0.0010  memory: 33872  loss: 1.1294
2024/06/18 13:33:37 - mmengine - INFO - Epoch(train)  [4][ 700/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:39:04  time: 1.1029  data_time: 0.0010  memory: 33872  loss: 1.2337
2024/06/18 13:35:28 - mmengine - INFO - Epoch(train)  [4][ 800/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:37:14  time: 1.1025  data_time: 0.0011  memory: 33872  loss: 1.2954
2024/06/18 13:36:16 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 13:37:18 - mmengine - INFO - Epoch(train)  [4][ 900/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:35:24  time: 1.1065  data_time: 0.0011  memory: 33872  loss: 1.1441
2024/06/18 13:39:09 - mmengine - INFO - Epoch(train)  [4][1000/1052]  base_lr: 9.0451e-04 lr: 9.0451e-04  eta: 3:33:36  time: 1.1061  data_time: 0.0010  memory: 33872  loss: 1.2589
2024/06/18 13:40:06 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 13:40:06 - mmengine - INFO - Saving checkpoint at 4 epochs
2024/06/18 13:41:38 - mmengine - INFO - Epoch(val) [4][30/30]    accuracy/top1: 65.3209  accuracy/top5: 89.9198  data_time: 0.0343  time: 2.8442
2024/06/18 13:43:28 - mmengine - INFO - Epoch(train)  [5][ 100/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:30:50  time: 1.1033  data_time: 0.0010  memory: 33872  loss: 1.0934
2024/06/18 13:45:19 - mmengine - INFO - Epoch(train)  [5][ 200/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:28:59  time: 1.1027  data_time: 0.0010  memory: 33872  loss: 1.1871
2024/06/18 13:47:09 - mmengine - INFO - Epoch(train)  [5][ 300/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:27:09  time: 1.1027  data_time: 0.0010  memory: 33872  loss: 1.0767
2024/06/18 13:48:59 - mmengine - INFO - Epoch(train)  [5][ 400/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:25:19  time: 1.1028  data_time: 0.0010  memory: 33872  loss: 1.2575
2024/06/18 13:50:50 - mmengine - INFO - Epoch(train)  [5][ 500/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:23:29  time: 1.1033  data_time: 0.0010  memory: 33872  loss: 1.0467
2024/06/18 13:52:40 - mmengine - INFO - Epoch(train)  [5][ 600/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:21:39  time: 1.1017  data_time: 0.0009  memory: 33872  loss: 1.1019
2024/06/18 13:54:30 - mmengine - INFO - Epoch(train)  [5][ 700/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:19:48  time: 1.1030  data_time: 0.0010  memory: 33872  loss: 1.0491
2024/06/18 13:56:12 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 13:56:21 - mmengine - INFO - Epoch(train)  [5][ 800/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:17:58  time: 1.1032  data_time: 0.0010  memory: 33872  loss: 1.1950
2024/06/18 13:58:11 - mmengine - INFO - Epoch(train)  [5][ 900/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:16:08  time: 1.1056  data_time: 0.0010  memory: 33872  loss: 1.1849
2024/06/18 14:00:01 - mmengine - INFO - Epoch(train)  [5][1000/1052]  base_lr: 8.3457e-04 lr: 8.3457e-04  eta: 3:14:18  time: 1.1037  data_time: 0.0010  memory: 33872  loss: 1.0486
2024/06/18 14:00:59 - mmengine - INFO - Exp name: dinov2-pretrained_20240618_121802
2024/06/18 14:00:59 - mmengine - INFO - Saving checkpoint at 5 epochs
2024/06/18 14:02:30 - mmengine - INFO - Epoch(val) [5][30/30]    accuracy/top1: 68.0481  accuracy/top5: 90.6417  data_time: 0.0358  time: 2.8471

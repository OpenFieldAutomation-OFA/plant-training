2024/09/25 18:50:09 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Sep 11 2024, 15:47:36) [GCC 11.4.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 0
    GPU 0: NVIDIA GeForce GTX 970
    CUDA_HOME: None
    GCC: x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.3.1+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.6 (Git Hash 86e6af5974177e513fd3fee58425e1063e7f1361)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.3.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.18.1+cu121
    OpenCV: 4.10.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 0
    deterministic: True
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/09/25 18:50:09 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=1024)
data_dir = '/mnt/c'
data_preprocessor = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    num_classes=7806,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
default_hooks = dict(
    checkpoint=dict(interval=1, max_keep_ckpts=5, type='CheckpointHook'),
    logger=dict(interval=1, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='VisualizationHook'))
default_scope = 'mmpretrain'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = '/mnt/c/finetuned.pth'
log_level = 'INFO'
model = dict(
    backbone=dict(
        arch='base',
        frozen_stages=0,
        img_size=518,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmpretrain/v1.0/dinov2/vit-base-p14_dinov2-pre_3rdparty_20230426-ba246503.pth',
            prefix='backbone',
            type='Pretrained'),
        layer_scale_init_value=1e-05,
        patch_size=14,
        type='VisionTransformer'),
    head=dict(
        in_channels=768,
        init_cfg=dict(
            checkpoint='/mnt/data/saved/plantclefleafcaw.pth',
            prefix='head',
            type='Pretrained'),
        loss=dict(type='CrossEntropyLoss'),
        num_classes=7806,
        topk=(
            1,
            5,
        ),
        type='VisionTransformerClsHead'),
    neck=None,
    type='ImageClassifier')
optim_wrapper = dict(
    loss_scale='dynamic',
    optimizer=dict(lr=1e-05, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        custom_keys=dict(
            cls_token=dict(decay_mult=0.0), mask_token=dict(decay_mult=0.0))),
    type='AmpOptimWrapper')
param_scheduler = [
    dict(T_max=20, by_epoch=True, type='CosineAnnealingLR'),
]
randomness = dict(deterministic=True, seed=0)
resume = False
test_cfg = dict()
test_dataloader = dict(
    batch_size=8,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='annotation/caw_test.txt',
        data_prefix='/mnt/c',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=1,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
test_evaluator = [
    dict(topk=(
        1,
        5,
    ), type='Accuracy'),
    dict(type='SingleLabelMetric'),
    dict(class_id=2354, type='BinaryMetric'),
    dict(class_id=2473, increase_output=0.1, type='BinaryMetric'),
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        backend='pillow',
        edge='short',
        interpolation='bicubic',
        scale=518,
        type='ResizeEdge'),
    dict(crop_size=518, type='CenterCrop'),
    dict(type='PackInputs'),
]
train_cfg = dict(by_epoch=True, max_epochs=10, val_interval=1)
train_dataloader = dict(
    batch_size=128,
    dataset=dict(
        ann_file='annotation/plantclefcaw_train.txt',
        data_prefix='/mnt/c',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=28,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        backend='pillow',
        interpolation='bicubic',
        scale=518,
        type='RandomResizedCrop'),
    dict(direction='horizontal', prob=0.5, type='RandomFlip'),
    dict(type='PackInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=128,
    dataset=dict(
        ann_file='annotation/plantclefcaw_val.txt',
        data_prefix='/mnt/c',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                backend='pillow',
                edge='short',
                interpolation='bicubic',
                scale=518,
                type='ResizeEdge'),
            dict(crop_size=518, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=28,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
val_evaluator = [
    dict(topk=(
        1,
        5,
    ), type='Accuracy'),
    dict(type='SingleLabelMetric'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/finetune'

2024/09/25 18:50:11 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/09/25 18:50:11 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/09/25 18:50:11 - mmengine - WARNING - The prefix is not set in metric class BinaryMetric.
2024/09/25 18:50:16 - mmengine - INFO - Load checkpoint from /mnt/c/finetuned.pth
2024/09/25 18:50:18 - mmengine - INFO - Epoch(test) [  1/103]    eta: 0:03:30  time: 2.0626  data_time: 0.1616  memory: 739  
2024/09/25 18:50:20 - mmengine - INFO - Epoch(test) [  2/103]    eta: 0:03:03  time: 1.8177  data_time: 0.0817  memory: 739  
2024/09/25 18:50:22 - mmengine - INFO - Epoch(test) [  3/103]    eta: 0:02:53  time: 1.7384  data_time: 0.0549  memory: 739  
2024/09/25 18:50:23 - mmengine - INFO - Epoch(test) [  4/103]    eta: 0:02:47  time: 1.6961  data_time: 0.0415  memory: 739  
2024/09/25 18:50:25 - mmengine - INFO - Epoch(test) [  5/103]    eta: 0:02:43  time: 1.6688  data_time: 0.0335  memory: 739  
2024/09/25 18:50:26 - mmengine - INFO - Epoch(test) [  6/103]    eta: 0:02:40  time: 1.6518  data_time: 0.0281  memory: 739  
2024/09/25 18:50:28 - mmengine - INFO - Epoch(test) [  7/103]    eta: 0:02:37  time: 1.6400  data_time: 0.0243  memory: 739  
2024/09/25 18:50:29 - mmengine - INFO - Epoch(test) [  8/103]    eta: 0:02:34  time: 1.6301  data_time: 0.0214  memory: 739  
2024/09/25 18:50:31 - mmengine - INFO - Epoch(test) [  9/103]    eta: 0:02:32  time: 1.6241  data_time: 0.0192  memory: 739  
2024/09/25 18:50:33 - mmengine - INFO - Epoch(test) [ 10/103]    eta: 0:02:30  time: 1.6198  data_time: 0.0174  memory: 739  
2024/09/25 18:50:34 - mmengine - INFO - Epoch(test) [ 11/103]    eta: 0:02:28  time: 1.5705  data_time: 0.0014  memory: 739  
2024/09/25 18:50:36 - mmengine - INFO - Epoch(test) [ 12/103]    eta: 0:02:26  time: 1.5694  data_time: 0.0013  memory: 739  
2024/09/25 18:50:37 - mmengine - INFO - Epoch(test) [ 13/103]    eta: 0:02:24  time: 1.5687  data_time: 0.0014  memory: 739  
2024/09/25 18:50:39 - mmengine - INFO - Epoch(test) [ 14/103]    eta: 0:02:22  time: 1.5684  data_time: 0.0015  memory: 739  
2024/09/25 18:50:40 - mmengine - INFO - Epoch(test) [ 15/103]    eta: 0:02:21  time: 1.5696  data_time: 0.0015  memory: 739  
2024/09/25 18:50:42 - mmengine - INFO - Epoch(test) [ 16/103]    eta: 0:02:19  time: 1.5697  data_time: 0.0015  memory: 739  
2024/09/25 18:50:43 - mmengine - INFO - Epoch(test) [ 17/103]    eta: 0:02:17  time: 1.5695  data_time: 0.0015  memory: 739  
2024/09/25 18:50:45 - mmengine - INFO - Epoch(test) [ 18/103]    eta: 0:02:15  time: 1.5707  data_time: 0.0015  memory: 739  
2024/09/25 18:50:47 - mmengine - INFO - Epoch(test) [ 19/103]    eta: 0:02:14  time: 1.5707  data_time: 0.0015  memory: 739  
2024/09/25 18:50:48 - mmengine - INFO - Epoch(test) [ 20/103]    eta: 0:02:12  time: 1.5692  data_time: 0.0015  memory: 739  
2024/09/25 18:50:50 - mmengine - INFO - Epoch(test) [ 21/103]    eta: 0:02:10  time: 1.5688  data_time: 0.0015  memory: 739  
2024/09/25 18:50:51 - mmengine - INFO - Epoch(test) [ 22/103]    eta: 0:02:08  time: 1.5706  data_time: 0.0015  memory: 739  
2024/09/25 18:50:53 - mmengine - INFO - Epoch(test) [ 23/103]    eta: 0:02:07  time: 1.5709  data_time: 0.0014  memory: 739  
2024/09/25 18:50:54 - mmengine - INFO - Epoch(test) [ 24/103]    eta: 0:02:05  time: 1.5719  data_time: 0.0013  memory: 739  
2024/09/25 18:50:56 - mmengine - INFO - Epoch(test) [ 25/103]    eta: 0:02:04  time: 1.5723  data_time: 0.0013  memory: 739  
2024/09/25 18:50:58 - mmengine - INFO - Epoch(test) [ 26/103]    eta: 0:02:02  time: 1.5724  data_time: 0.0013  memory: 739  
2024/09/25 18:50:59 - mmengine - INFO - Epoch(test) [ 27/103]    eta: 0:02:00  time: 1.5725  data_time: 0.0013  memory: 739  
2024/09/25 18:51:01 - mmengine - INFO - Epoch(test) [ 28/103]    eta: 0:01:59  time: 1.5723  data_time: 0.0013  memory: 739  
2024/09/25 18:51:02 - mmengine - INFO - Epoch(test) [ 29/103]    eta: 0:01:57  time: 1.5722  data_time: 0.0013  memory: 739  
2024/09/25 18:51:04 - mmengine - INFO - Epoch(test) [ 30/103]    eta: 0:01:55  time: 1.5723  data_time: 0.0013  memory: 739  
2024/09/25 18:51:05 - mmengine - INFO - Epoch(test) [ 31/103]    eta: 0:01:54  time: 1.5731  data_time: 0.0013  memory: 739  
2024/09/25 18:51:07 - mmengine - INFO - Epoch(test) [ 32/103]    eta: 0:01:52  time: 1.5714  data_time: 0.0013  memory: 739  
2024/09/25 18:51:09 - mmengine - INFO - Epoch(test) [ 33/103]    eta: 0:01:50  time: 1.5709  data_time: 0.0014  memory: 739  
2024/09/25 18:51:10 - mmengine - INFO - Epoch(test) [ 34/103]    eta: 0:01:49  time: 1.5704  data_time: 0.0014  memory: 739  
2024/09/25 18:51:12 - mmengine - INFO - Epoch(test) [ 35/103]    eta: 0:01:47  time: 1.5693  data_time: 0.0014  memory: 739  
2024/09/25 18:51:13 - mmengine - INFO - Epoch(test) [ 36/103]    eta: 0:01:46  time: 1.5693  data_time: 0.0013  memory: 739  
2024/09/25 18:51:15 - mmengine - INFO - Epoch(test) [ 37/103]    eta: 0:01:44  time: 1.5698  data_time: 0.0013  memory: 739  
2024/09/25 18:51:16 - mmengine - INFO - Epoch(test) [ 38/103]    eta: 0:01:42  time: 1.5707  data_time: 0.0013  memory: 739  
2024/09/25 18:51:18 - mmengine - INFO - Epoch(test) [ 39/103]    eta: 0:01:41  time: 1.5706  data_time: 0.0013  memory: 739  
2024/09/25 18:51:20 - mmengine - INFO - Epoch(test) [ 40/103]    eta: 0:01:39  time: 1.5712  data_time: 0.0012  memory: 739  
2024/09/25 18:51:21 - mmengine - INFO - Epoch(test) [ 41/103]    eta: 0:01:38  time: 1.5717  data_time: 0.0012  memory: 739  
2024/09/25 18:51:23 - mmengine - INFO - Epoch(test) [ 42/103]    eta: 0:01:36  time: 1.5726  data_time: 0.0012  memory: 739  
2024/09/25 18:51:24 - mmengine - INFO - Epoch(test) [ 43/103]    eta: 0:01:34  time: 1.5727  data_time: 0.0012  memory: 739  
2024/09/25 18:51:26 - mmengine - INFO - Epoch(test) [ 44/103]    eta: 0:01:33  time: 1.5732  data_time: 0.0012  memory: 739  
2024/09/25 18:51:27 - mmengine - INFO - Epoch(test) [ 45/103]    eta: 0:01:31  time: 1.5728  data_time: 0.0012  memory: 739  
2024/09/25 18:51:29 - mmengine - INFO - Epoch(test) [ 46/103]    eta: 0:01:30  time: 1.5733  data_time: 0.0012  memory: 739  
2024/09/25 18:51:31 - mmengine - INFO - Epoch(test) [ 47/103]    eta: 0:01:28  time: 1.5735  data_time: 0.0012  memory: 739  
2024/09/25 18:51:32 - mmengine - INFO - Epoch(test) [ 48/103]    eta: 0:01:26  time: 1.5731  data_time: 0.0013  memory: 739  
2024/09/25 18:51:34 - mmengine - INFO - Epoch(test) [ 49/103]    eta: 0:01:25  time: 1.5739  data_time: 0.0013  memory: 739  
2024/09/25 18:51:35 - mmengine - INFO - Epoch(test) [ 50/103]    eta: 0:01:23  time: 1.5730  data_time: 0.0013  memory: 739  
2024/09/25 18:51:37 - mmengine - INFO - Epoch(test) [ 51/103]    eta: 0:01:22  time: 1.5723  data_time: 0.0013  memory: 739  
2024/09/25 18:51:39 - mmengine - INFO - Epoch(test) [ 52/103]    eta: 0:01:20  time: 1.5731  data_time: 0.0013  memory: 739  
2024/09/25 18:51:40 - mmengine - INFO - Epoch(test) [ 53/103]    eta: 0:01:19  time: 1.5726  data_time: 0.0013  memory: 739  
2024/09/25 18:51:42 - mmengine - INFO - Epoch(test) [ 54/103]    eta: 0:01:17  time: 1.5730  data_time: 0.0013  memory: 739  
2024/09/25 18:51:43 - mmengine - INFO - Epoch(test) [ 55/103]    eta: 0:01:15  time: 1.5739  data_time: 0.0014  memory: 739  
2024/09/25 18:51:45 - mmengine - INFO - Epoch(test) [ 56/103]    eta: 0:01:14  time: 1.5737  data_time: 0.0014  memory: 739  
2024/09/25 18:51:46 - mmengine - INFO - Epoch(test) [ 57/103]    eta: 0:01:12  time: 1.5727  data_time: 0.0015  memory: 739  
2024/09/25 18:51:48 - mmengine - INFO - Epoch(test) [ 58/103]    eta: 0:01:11  time: 1.5729  data_time: 0.0014  memory: 739  
2024/09/25 18:51:50 - mmengine - INFO - Epoch(test) [ 59/103]    eta: 0:01:09  time: 1.5718  data_time: 0.0014  memory: 739  
2024/09/25 18:51:51 - mmengine - INFO - Epoch(test) [ 60/103]    eta: 0:01:07  time: 1.5732  data_time: 0.0014  memory: 739  
2024/09/25 18:51:53 - mmengine - INFO - Epoch(test) [ 61/103]    eta: 0:01:06  time: 1.5738  data_time: 0.0014  memory: 739  
2024/09/25 18:51:54 - mmengine - INFO - Epoch(test) [ 62/103]    eta: 0:01:04  time: 1.5730  data_time: 0.0014  memory: 739  
2024/09/25 18:51:56 - mmengine - INFO - Epoch(test) [ 63/103]    eta: 0:01:03  time: 1.5734  data_time: 0.0014  memory: 739  
2024/09/25 18:51:57 - mmengine - INFO - Epoch(test) [ 64/103]    eta: 0:01:01  time: 1.5712  data_time: 0.0014  memory: 739  
2024/09/25 18:51:59 - mmengine - INFO - Epoch(test) [ 65/103]    eta: 0:01:00  time: 1.5717  data_time: 0.0013  memory: 739  
2024/09/25 18:52:01 - mmengine - INFO - Epoch(test) [ 66/103]    eta: 0:00:58  time: 1.5720  data_time: 0.0013  memory: 739  
2024/09/25 18:52:02 - mmengine - INFO - Epoch(test) [ 67/103]    eta: 0:00:56  time: 1.5730  data_time: 0.0012  memory: 739  
2024/09/25 18:52:04 - mmengine - INFO - Epoch(test) [ 68/103]    eta: 0:00:55  time: 1.5727  data_time: 0.0014  memory: 739  
2024/09/25 18:52:05 - mmengine - INFO - Epoch(test) [ 69/103]    eta: 0:00:53  time: 1.5728  data_time: 0.0014  memory: 739  
2024/09/25 18:52:07 - mmengine - INFO - Epoch(test) [ 70/103]    eta: 0:00:52  time: 1.5717  data_time: 0.0014  memory: 739  
2024/09/25 18:52:08 - mmengine - INFO - Epoch(test) [ 71/103]    eta: 0:00:50  time: 1.5704  data_time: 0.0014  memory: 739  
2024/09/25 18:52:10 - mmengine - INFO - Epoch(test) [ 72/103]    eta: 0:00:48  time: 1.5708  data_time: 0.0014  memory: 739  
2024/09/25 18:52:12 - mmengine - INFO - Epoch(test) [ 73/103]    eta: 0:00:47  time: 1.5706  data_time: 0.0015  memory: 739  
2024/09/25 18:52:13 - mmengine - INFO - Epoch(test) [ 74/103]    eta: 0:00:45  time: 1.5723  data_time: 0.0014  memory: 739  
2024/09/25 18:52:15 - mmengine - INFO - Epoch(test) [ 75/103]    eta: 0:00:44  time: 1.5719  data_time: 0.0014  memory: 739  
2024/09/25 18:52:16 - mmengine - INFO - Epoch(test) [ 76/103]    eta: 0:00:42  time: 1.5716  data_time: 0.0014  memory: 739  
2024/09/25 18:52:18 - mmengine - INFO - Epoch(test) [ 77/103]    eta: 0:00:41  time: 1.5716  data_time: 0.0014  memory: 739  
2024/09/25 18:52:19 - mmengine - INFO - Epoch(test) [ 78/103]    eta: 0:00:39  time: 1.5713  data_time: 0.0014  memory: 739  
2024/09/25 18:52:21 - mmengine - INFO - Epoch(test) [ 79/103]    eta: 0:00:37  time: 1.5719  data_time: 0.0013  memory: 739  
2024/09/25 18:52:23 - mmengine - INFO - Epoch(test) [ 80/103]    eta: 0:00:36  time: 1.5725  data_time: 0.0013  memory: 739  
2024/09/25 18:52:24 - mmengine - INFO - Epoch(test) [ 81/103]    eta: 0:00:34  time: 1.5733  data_time: 0.0014  memory: 739  
2024/09/25 18:52:26 - mmengine - INFO - Epoch(test) [ 82/103]    eta: 0:00:33  time: 1.5728  data_time: 0.0014  memory: 739  
2024/09/25 18:52:27 - mmengine - INFO - Epoch(test) [ 83/103]    eta: 0:00:31  time: 1.5738  data_time: 0.0014  memory: 739  
2024/09/25 18:52:29 - mmengine - INFO - Epoch(test) [ 84/103]    eta: 0:00:29  time: 1.5739  data_time: 0.0014  memory: 739  
2024/09/25 18:52:30 - mmengine - INFO - Epoch(test) [ 85/103]    eta: 0:00:28  time: 1.5735  data_time: 0.0014  memory: 739  
2024/09/25 18:52:32 - mmengine - INFO - Epoch(test) [ 86/103]    eta: 0:00:26  time: 1.5736  data_time: 0.0014  memory: 739  
2024/09/25 18:52:34 - mmengine - INFO - Epoch(test) [ 87/103]    eta: 0:00:25  time: 1.5737  data_time: 0.0014  memory: 739  
2024/09/25 18:52:35 - mmengine - INFO - Epoch(test) [ 88/103]    eta: 0:00:23  time: 1.5740  data_time: 0.0013  memory: 739  
2024/09/25 18:52:37 - mmengine - INFO - Epoch(test) [ 89/103]    eta: 0:00:22  time: 1.5738  data_time: 0.0013  memory: 739  
2024/09/25 18:52:38 - mmengine - INFO - Epoch(test) [ 90/103]    eta: 0:00:20  time: 1.5744  data_time: 0.0013  memory: 739  
2024/09/25 18:52:40 - mmengine - INFO - Epoch(test) [ 91/103]    eta: 0:00:18  time: 1.5746  data_time: 0.0013  memory: 739  
2024/09/25 18:52:41 - mmengine - INFO - Epoch(test) [ 92/103]    eta: 0:00:17  time: 1.5744  data_time: 0.0012  memory: 739  
2024/09/25 18:52:43 - mmengine - INFO - Epoch(test) [ 93/103]    eta: 0:00:15  time: 1.5750  data_time: 0.0012  memory: 739  
2024/09/25 18:52:45 - mmengine - INFO - Epoch(test) [ 94/103]    eta: 0:00:14  time: 1.5753  data_time: 0.0012  memory: 739  
2024/09/25 18:52:46 - mmengine - INFO - Epoch(test) [ 95/103]    eta: 0:00:12  time: 1.5757  data_time: 0.0012  memory: 739  
2024/09/25 18:52:48 - mmengine - INFO - Epoch(test) [ 96/103]    eta: 0:00:11  time: 1.5761  data_time: 0.0012  memory: 739  
2024/09/25 18:52:49 - mmengine - INFO - Epoch(test) [ 97/103]    eta: 0:00:09  time: 1.5762  data_time: 0.0013  memory: 739  
2024/09/25 18:52:51 - mmengine - INFO - Epoch(test) [ 98/103]    eta: 0:00:07  time: 1.5759  data_time: 0.0013  memory: 739  
2024/09/25 18:52:52 - mmengine - INFO - Epoch(test) [ 99/103]    eta: 0:00:06  time: 1.5758  data_time: 0.0013  memory: 739  
2024/09/25 18:52:54 - mmengine - INFO - Epoch(test) [100/103]    eta: 0:00:04  time: 1.5747  data_time: 0.0013  memory: 739  
2024/09/25 18:52:56 - mmengine - INFO - Epoch(test) [101/103]    eta: 0:00:03  time: 1.5742  data_time: 0.0013  memory: 739  
2024/09/25 18:52:57 - mmengine - INFO - Epoch(test) [102/103]    eta: 0:00:01  time: 1.5743  data_time: 0.0013  memory: 739  
2024/09/25 18:52:59 - mmengine - INFO - Epoch(test) [103/103]    eta: 0:00:00  time: 1.5725  data_time: 0.0012  memory: 739  
2024/09/25 18:52:59 - mmengine - INFO - Epoch(test) [103/103]    accuracy/top1: 83.4951  accuracy/top5: 95.8738  single-label/precision: 0.5142  single-label/recall: 0.4786  single-label/f1-score: 0.4840  2354/accuracy: 0.9903  2354/precision: 0.9245  2354/recall: 0.9245  2354/f1: 0.9245  2354/f2: 0.9245  2354/tp: 49  2354/tn: 767  2354/fp: 4  2354/fn: 4  2473/accuracy: 0.9879  2473/precision: 0.8730  2473/recall: 0.9649  2473/f1: 0.9167  2473/f2: 0.9450  2473/tp: 55  2473/tn: 759  2473/fp: 8  2473/fn: 2  data_time: 0.0029  time: 1.5770
